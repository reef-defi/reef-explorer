
import { ABI } from "../../src/types";
import { ContractStorage } from "../utils";

export default {
  name: "EnglishAuction",
  filename: "EnglishAuction.sol",
  arguments: JSON.stringify(["0x82A258cb20E2ADB4788153cd5eb5839615EcE9a0",231,1223]),
  bytecode: "0x608060405234801561001057600080fd5b5060405161090d38038061090d83398101604081905261002f91610067565b600080546001600160a01b039094166001600160a01b03199485161790556001919091556002805490921633179091556005556100a8565b60008060006060848603121561007b578283fd5b83516001600160a01b0381168114610091578384fd5b602085015160409095015190969495509392505050565b610856806100b76000396000f3fe6080604052600436106100c25760003560e01c806362ea82db1161007f578063be9a655511610059578063be9a655514610203578063c6bc518214610218578063d57bde791461022e578063efbe1c1c1461024457600080fd5b806362ea82db1461018c5780637cc3ae8c146101c757806391f90157146101dd57600080fd5b806308551a53146100c757806312fa6feb146101045780631998aeef146101335780631f2698ab1461013d5780633ccfd60b1461015757806347ccca021461016c575b600080fd5b3480156100d357600080fd5b506002546100e7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011057600080fd5b5060045461012390610100900460ff1681565b60405190151581526020016100fb565b61013b610259565b005b34801561014957600080fd5b506004546101239060ff1681565b34801561016357600080fd5b5061013b6103c3565b34801561017857600080fd5b506000546100e7906001600160a01b031681565b34801561019857600080fd5b506101b96101a73660046107ce565b60066020526000908152604090205481565b6040519081526020016100fb565b3480156101d357600080fd5b506101b960035481565b3480156101e957600080fd5b506004546100e7906201000090046001600160a01b031681565b34801561020f57600080fd5b5061013b61043d565b34801561022457600080fd5b506101b960015481565b34801561023a57600080fd5b506101b960055481565b34801561025057600080fd5b5061013b610578565b60045460ff1661029e5760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd081cdd185c9d195960aa1b60448201526064015b60405180910390fd5b60035442106102d75760405162461bcd60e51b8152602060048201526005602482015264195b99195960da1b6044820152606401610295565b600554341161031a5760405162461bcd60e51b815260206004820152600f60248201526e1d985b1d59480f081a1a59da195cdd608a1b6044820152606401610295565b6004546201000090046001600160a01b03161561036a576005546004546201000090046001600160a01b0316600090815260066020526040812080549091906103649084906107fc565b90915550505b6004805462010000600160b01b03191633620100008102919091179091553460058190556040519081527fe684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d29060200160405180910390a2565b33600081815260066020526040808220805490839055905190929183156108fc02918491818181858888f19350505050158015610404573d6000803e3d6000fd5b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250565b60045460ff161561047a5760405162461bcd60e51b81526020600482015260076024820152661cdd185c9d195960ca1b6044820152606401610295565b6002546001600160a01b031633146104c15760405162461bcd60e51b815260206004820152600a6024820152693737ba1039b2b63632b960b11b6044820152606401610295565b6000546001546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561051757600080fd5b505af115801561052b573d6000803e3d6000fd5b50506004805460ff191660011790555061054a90504262093a806107fc565b6003556040517f1b55ba3aa851a46be3b365aee5b5c140edd620d578922f3e8466d2cbd96f954b90600090a1565b60045460ff166105b85760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd081cdd185c9d195960aa1b6044820152606401610295565b6003544210156105f65760405162461bcd60e51b81526020600482015260096024820152681b9bdd08195b99195960ba1b6044820152606401610295565b600454610100900460ff16156106365760405162461bcd60e51b8152602060048201526005602482015264195b99195960da1b6044820152606401610295565b6004805461ff00191661010017908190556201000090046001600160a01b031615610710576000546004805460015460405163a9059cbb60e01b8152620100009092046001600160a01b0390811693830193909352602482015291169063a9059cbb90604401600060405180830381600087803b1580156106b657600080fd5b505af11580156106ca573d6000803e3d6000fd5b50506002546005546040516001600160a01b03909216935080156108fc029250906000818181858888f1935050505015801561070a573d6000803e3d6000fd5b5061077d565b60005460025460015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb90604401600060405180830381600087803b15801561076457600080fd5b505af1158015610778573d6000803e3d6000fd5b505050505b60045460055460408051620100009093046001600160a01b0316835260208301919091527f7d7570b046e5ead3a4f3fbc9fa2445113625a1e79823776146316bafed6b8cc5910160405180910390a1565b6000602082840312156107df578081fd5b81356001600160a01b03811681146107f5578182fd5b9392505050565b6000821982111561081b57634e487b7160e01b81526011600452602481fd5b50019056fea26469706673582212205475fba1f34c2776eb27fe73e262c3ce2f166efc467dc6fecf9315aab2b259c264736f6c6343000804003300000000000000000000000082a258cb20e2adb4788153cd5eb5839615ece9a000000000000000000000000000000000000000000000000000000000000000e700000000000000000000000000000000000000000000000000000000000004c7",
  abi: [{"inputs":[{"internalType":"address","name":"_nft","type":"address"},{"internalType":"uint256","name":"_nftId","type":"uint256"},{"internalType":"uint256","name":"_startingBid","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Bid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"End","type":"event"},{"anonymous":false,"inputs":[],"name":"Start","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"bidder","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"bid","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"bids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"end","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ended","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"highestBid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"highestBidder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nft","outputs":[{"internalType":"contract IERC721","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"seller","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"start","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"started","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}] as ABI,
  sources: JSON.stringify({"EnglishAuction.sol":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\ninterface IERC721 {\n    function transfer(address, uint) external;\n\n    function transferFrom(\n        address,\n        address,\n        uint\n    ) external;\n}\n\ncontract EnglishAuction {\n    event Start();\n    event Bid(address indexed sender, uint amount);\n    event Withdraw(address indexed bidder, uint amount);\n    event End(address winner, uint amount);\n\n    IERC721 public nft;\n    uint public nftId;\n\n    address payable public seller;\n    uint public endAt;\n    bool public started;\n    bool public ended;\n\n    address public highestBidder;\n    uint public highestBid;\n    mapping(address => uint) public bids;\n\n    constructor(\n        address _nft,\n        uint _nftId,\n        uint _startingBid\n    ) {\n        nft = IERC721(_nft);\n        nftId = _nftId;\n\n        seller = payable(msg.sender);\n        highestBid = _startingBid;\n    }\n\n    function start() external {\n        require(!started, \"started\");\n        require(msg.sender == seller, \"not seller\");\n\n        nft.transferFrom(msg.sender, address(this), nftId);\n        started = true;\n        endAt = block.timestamp + 7 days;\n\n        emit Start();\n    }\n\n    function bid() external payable {\n        require(started, \"not started\");\n        require(block.timestamp < endAt, \"ended\");\n        require(msg.value > highestBid, \"value < highest\");\n\n        if (highestBidder != address(0)) {\n            bids[highestBidder] += highestBid;\n        }\n\n        highestBidder = msg.sender;\n        highestBid = msg.value;\n\n        emit Bid(msg.sender, msg.value);\n    }\n\n    function withdraw() external {\n        uint bal = bids[msg.sender];\n        bids[msg.sender] = 0;\n        payable(msg.sender).transfer(bal);\n\n        emit Withdraw(msg.sender, bal);\n    }\n\n    function end() external {\n        require(started, \"not started\");\n        require(block.timestamp >= endAt, \"not ended\");\n        require(!ended, \"ended\");\n\n        ended = true;\n        if (highestBidder != address(0)) {\n            nft.transfer(highestBidder, nftId);\n            seller.transfer(highestBid);\n        } else {\n            nft.transfer(seller, nftId);\n        }\n\n        emit End(highestBidder, highestBid);\n    }\n}\n\ncontract BasicNFT is IERC721 {\n  \n    function transfer(address add, uint value) external override{\n\n    }\n\n    function transferFrom(\n        address,\n        address,\n        uint\n    ) external override {\n\n    }\n}"}),
} as ContractStorage
