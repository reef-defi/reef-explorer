
import { ABI } from "../../src/types";
import { ContractStorage } from "../utils";

export default {
  name: "MultiSigWallet",
  filename: "MultiSigWallet.sol",
  arguments: JSON.stringify([["0x82A258cb20E2ADB4788153cd5eb5839615EcE9a0","0x69535cB2F9Db4FC5f2867A27a1eD8e6612F787bA","0x9ADdFbFB23974488e51389A19A38946d102e83fE"],1]),
  bytecode: "0x60806040523480156200001157600080fd5b506040516200147f3803806200147f833981016040819052620000349162000278565b60008251116200007d5760405162461bcd60e51b815260206004820152600f60248201526e1bdddb995c9cc81c995c5d5a5c9959608a1b60448201526064015b60405180910390fd5b6000811180156200008f575081518111155b620000ee5760405162461bcd60e51b815260206004820152602860248201527f696e76616c6964206e756d626572206f6620726571756972656420636f6e6669604482015267726d6174696f6e7360c01b606482015260840162000074565b60005b8251811015620002505760008382815181106200011e57634e487b7160e01b600052603260045260246000fd5b6020026020010151905060006001600160a01b0316816001600160a01b031614156200017d5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b604482015260640162000074565b6001600160a01b03811660009081526001602052604090205460ff1615620001db5760405162461bcd60e51b815260206004820152601060248201526f6f776e6572206e6f7420756e6971756560801b604482015260640162000074565b6001600160a01b031660008181526001602081905260408220805460ff191682179055815490810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b031916909117905580620002478162000354565b915050620000f1565b506002555062000392565b80516001600160a01b03811681146200027357600080fd5b919050565b600080604083850312156200028b578182fd5b82516001600160401b0380821115620002a2578384fd5b818501915085601f830112620002b6578384fd5b8151602082821115620002cd57620002cd6200037c565b8160051b604051601f19603f83011681018181108682111715620002f557620002f56200037c565b604052838152828101945085830182870184018b101562000314578889fd5b8896505b8487101562000341576200032c816200025b565b86526001969096019594830194830162000318565b5097909101519698969750505050505050565b60006000198214156200037557634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6110dd80620003a26000396000f3fe6080604052600436106100ab5760003560e01c80639ace38c2116100645780639ace38c21461021b578063a0e67e2b1461023b578063c01a8c841461025d578063c64274741461027d578063d0549b851461029d578063ee22610b146102b357600080fd5b8063025e7c27146100f157806320ea8d861461012e5780632e7700f0146101505780632f54bf6e1461016f57806333ea3dc8146101af57806380f59a65146101e057600080fd5b366100ec576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b600080fd5b3480156100fd57600080fd5b5061011161010c366004610dc4565b6102d3565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561013a57600080fd5b5061014e610149366004610dc4565b6102fd565b005b34801561015c57600080fd5b506004545b604051908152602001610125565b34801561017b57600080fd5b5061019f61018a366004610cdd565b60016020526000908152604090205460ff1681565b6040519015158152602001610125565b3480156101bb57600080fd5b506101cf6101ca366004610dc4565b6104a4565b604051610125959493929190610eed565b3480156101ec57600080fd5b5061019f6101fb366004610ddc565b600360209081526000928352604080842090915290825290205460ff1681565b34801561022757600080fd5b506101cf610236366004610dc4565b6105ad565b34801561024757600080fd5b50610250610686565b6040516101259190610f28565b34801561026957600080fd5b5061014e610278366004610dc4565b6106e8565b34801561028957600080fd5b5061014e610298366004610cfe565b610892565b3480156102a957600080fd5b5061016160025481565b3480156102bf57600080fd5b5061014e6102ce366004610dc4565b610a19565b600081815481106102e357600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526001602052604090205460ff166103355760405162461bcd60e51b815260040161032c90610fcd565b60405180910390fd5b600454819081106103585760405162461bcd60e51b815260040161032c90610f75565b816004818154811061037a57634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff16156103ae5760405162461bcd60e51b815260040161032c90610fa0565b6000600484815481106103d157634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526003825260408085203386529092529220546005909102909101915060ff1661043c5760405162461bcd60e51b815260206004820152601060248201526f1d1e081b9bdd0818dbdb999a5c9b595960821b604482015260640161032c565b60018160040160008282546104519190611029565b90915550506000848152600360209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b60008060606000806000600487815481106104cf57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060059091020180546001820154600383015460048401546002850180549596506001600160a01b039094169492939260ff90921691839061051990611040565b80601f016020809104026020016040519081016040528092919081815260200182805461054590611040565b80156105925780601f1061056757610100808354040283529160200191610592565b820191906000526020600020905b81548152906001019060200180831161057557829003601f168201915b50505050509250955095509550955095505091939590929450565b600481815481106105bd57600080fd5b60009182526020909120600590910201805460018201546002830180546001600160a01b0390931694509092916105f390611040565b80601f016020809104026020016040519081016040528092919081815260200182805461061f90611040565b801561066c5780601f106106415761010080835404028352916020019161066c565b820191906000526020600020905b81548152906001019060200180831161064f57829003601f168201915b505050506003830154600490930154919260ff1691905085565b606060008054806020026020016040519081016040528092919081815260200182805480156106de57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106c0575b5050505050905090565b3360009081526001602052604090205460ff166107175760405162461bcd60e51b815260040161032c90610fcd565b6004548190811061073a5760405162461bcd60e51b815260040161032c90610f75565b816004818154811061075c57634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff16156107905760405162461bcd60e51b815260040161032c90610fa0565b6000838152600360209081526040808320338452909152902054839060ff16156107f35760405162461bcd60e51b81526020600482015260146024820152731d1e08185b1c9958591e4818dbdb999a5c9b595960621b604482015260640161032c565b60006004858154811061081657634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502019050600181600401600082825461083b9190611011565b90915550506000858152600360209081526040808320338085529252808320805460ff191660011790555187927f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004191a35050505050565b3360009081526001602052604090205460ff166108c15760405162461bcd60e51b815260040161032c90610fcd565b600480546040805160a0810182526001600160a01b0387811682526020808301888152938301878152600060608501819052608085018190526001870188559690965282517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6005870290810180546001600160a01b0319169290941691909117835593517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c850155945180519495929491936109a5937f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d90910192910190610c28565b50606082015160038201805460ff19169115159190911790556080909101516004909101556040516001600160a01b03851690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d90610a0b9088908890610ff0565b60405180910390a450505050565b3360009081526001602052604090205460ff16610a485760405162461bcd60e51b815260040161032c90610fcd565b60045481908110610a6b5760405162461bcd60e51b815260040161032c90610f75565b8160048181548110610a8d57634e487b7160e01b600052603260045260246000fd5b600091825260209091206003600590920201015460ff1615610ac15760405162461bcd60e51b815260040161032c90610fa0565b600060048481548110610ae457634e487b7160e01b600052603260045260246000fd5b9060005260206000209060050201905060025481600401541015610b3e5760405162461bcd60e51b81526020600482015260116024820152700c6c2dcdcdee840caf0cac6eae8ca40e8f607b1b604482015260640161032c565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b03169190610b75906002860190610e52565b60006040518083038185875af1925050503d8060008114610bb2576040519150601f19603f3d011682016040523d82523d6000602084013e610bb7565b606091505b5050905080610bf45760405162461bcd60e51b81526020600482015260096024820152681d1e0819985a5b195960ba1b604482015260640161032c565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac90600090a35050505050565b828054610c3490611040565b90600052602060002090601f016020900481019282610c565760008555610c9c565b82601f10610c6f57805160ff1916838001178555610c9c565b82800160010185558215610c9c579182015b82811115610c9c578251825591602001919060010190610c81565b50610ca8929150610cac565b5090565b5b80821115610ca85760008155600101610cad565b80356001600160a01b0381168114610cd857600080fd5b919050565b600060208284031215610cee578081fd5b610cf782610cc1565b9392505050565b600080600060608486031215610d12578182fd5b610d1b84610cc1565b925060208401359150604084013567ffffffffffffffff80821115610d3e578283fd5b818601915086601f830112610d51578283fd5b813581811115610d6357610d63611091565b604051601f8201601f19908116603f01168101908382118183101715610d8b57610d8b611091565b81604052828152896020848701011115610da3578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060208284031215610dd5578081fd5b5035919050565b60008060408385031215610dee578182fd5b82359150610dfe60208401610cc1565b90509250929050565b60008151808452815b81811015610e2c57602081850181015186830182015201610e10565b81811115610e3d5782602083870101525b50601f01601f19169290920160200192915050565b600080835482600182811c915080831680610e6e57607f831692505b6020808410821415610e8e57634e487b7160e01b87526022600452602487fd5b818015610ea25760018114610eb357610edf565b60ff19861689528489019650610edf565b60008a815260209020885b86811015610ed75781548b820152908501908301610ebe565b505084890196505b509498975050505050505050565b60018060a01b038616815284602082015260a060408201526000610f1460a0830186610e07565b931515606083015250608001529392505050565b6020808252825182820181905260009190848201906040850190845b81811015610f695783516001600160a01b031683529284019291840191600101610f44565b50909695505050505050565b6020808252601190820152701d1e08191bd95cc81b9bdd08195e1a5cdd607a1b604082015260600190565b6020808252601390820152721d1e08185b1c9958591e48195e1958dd5d1959606a1b604082015260600190565b6020808252600990820152683737ba1037bbb732b960b91b604082015260600190565b8281526040602082015260006110096040830184610e07565b949350505050565b600082198211156110245761102461107b565b500190565b60008282101561103b5761103b61107b565b500390565b600181811c9082168061105457607f821691505b6020821081141561107557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200627c9421af45ec6769cf3e79be159c247b15d6ece7fe47553e5ef003c50110664736f6c6343000804003300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000300000000000000000000000082a258cb20e2adb4788153cd5eb5839615ece9a000000000000000000000000069535cb2f9db4fc5f2867a27a1ed8e6612f787ba0000000000000000000000009addfbfb23974488e51389a19a38946d102e83fe",
  abi: [{"inputs":[{"internalType":"address[]","name":"_owners","type":"address[]"},{"internalType":"uint256","name":"_numConfirmationsRequired","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"ConfirmTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"ExecuteTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"RevokeConfirmation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"SubmitTransaction","type":"event"},{"inputs":[{"internalType":"uint256","name":"_txIndex","type":"uint256"}],"name":"confirmTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_txIndex","type":"uint256"}],"name":"executeTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getOwners","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_txIndex","type":"uint256"}],"name":"getTransaction","outputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"executed","type":"bool"},{"internalType":"uint256","name":"numConfirmations","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTransactionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"isConfirmed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numConfirmationsRequired","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"owners","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_txIndex","type":"uint256"}],"name":"revokeConfirmation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"submitTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"transactions","outputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"executed","type":"bool"},{"internalType":"uint256","name":"numConfirmations","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}] as ABI,
  sources: JSON.stringify({"MultiSigWallet.sol":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\ncontract MultiSigWallet {\n    event Deposit(address indexed sender, uint amount, uint balance);\n    event SubmitTransaction(\n        address indexed owner,\n        uint indexed txIndex,\n        address indexed to,\n        uint value,\n        bytes data\n    );\n    event ConfirmTransaction(address indexed owner, uint indexed txIndex);\n    event RevokeConfirmation(address indexed owner, uint indexed txIndex);\n    event ExecuteTransaction(address indexed owner, uint indexed txIndex);\n\n    address[] public owners;\n    mapping(address => bool) public isOwner;\n    uint public numConfirmationsRequired;\n\n    struct Transaction {\n        address to;\n        uint value;\n        bytes data;\n        bool executed;\n        uint numConfirmations;\n    }\n\n    // mapping from tx index => owner => bool\n    mapping(uint => mapping(address => bool)) public isConfirmed;\n\n    Transaction[] public transactions;\n\n    modifier onlyOwner() {\n        require(isOwner[msg.sender], \"not owner\");\n        _;\n    }\n\n    modifier txExists(uint _txIndex) {\n        require(_txIndex < transactions.length, \"tx does not exist\");\n        _;\n    }\n\n    modifier notExecuted(uint _txIndex) {\n        require(!transactions[_txIndex].executed, \"tx already executed\");\n        _;\n    }\n\n    modifier notConfirmed(uint _txIndex) {\n        require(!isConfirmed[_txIndex][msg.sender], \"tx already confirmed\");\n        _;\n    }\n\n    constructor(address[] memory _owners, uint _numConfirmationsRequired) {\n        require(_owners.length > 0, \"owners required\");\n        require(\n            _numConfirmationsRequired > 0 &&\n                _numConfirmationsRequired <= _owners.length,\n            \"invalid number of required confirmations\"\n        );\n\n        for (uint i = 0; i < _owners.length; i++) {\n            address owner = _owners[i];\n\n            require(owner != address(0), \"invalid owner\");\n            require(!isOwner[owner], \"owner not unique\");\n\n            isOwner[owner] = true;\n            owners.push(owner);\n        }\n\n        numConfirmationsRequired = _numConfirmationsRequired;\n    }\n\n    receive() external payable {\n        emit Deposit(msg.sender, msg.value, address(this).balance);\n    }\n\n    function submitTransaction(\n        address _to,\n        uint _value,\n        bytes memory _data\n    ) public onlyOwner {\n        uint txIndex = transactions.length;\n\n        transactions.push(\n            Transaction({\n                to: _to,\n                value: _value,\n                data: _data,\n                executed: false,\n                numConfirmations: 0\n            })\n        );\n\n        emit SubmitTransaction(msg.sender, txIndex, _to, _value, _data);\n    }\n\n    function confirmTransaction(uint _txIndex)\n        public\n        onlyOwner\n        txExists(_txIndex)\n        notExecuted(_txIndex)\n        notConfirmed(_txIndex)\n    {\n        Transaction storage transaction = transactions[_txIndex];\n        transaction.numConfirmations += 1;\n        isConfirmed[_txIndex][msg.sender] = true;\n\n        emit ConfirmTransaction(msg.sender, _txIndex);\n    }\n\n    function executeTransaction(uint _txIndex)\n        public\n        onlyOwner\n        txExists(_txIndex)\n        notExecuted(_txIndex)\n    {\n        Transaction storage transaction = transactions[_txIndex];\n\n        require(\n            transaction.numConfirmations >= numConfirmationsRequired,\n            \"cannot execute tx\"\n        );\n\n        transaction.executed = true;\n\n        (bool success, ) = transaction.to.call{value: transaction.value}(\n            transaction.data\n        );\n        require(success, \"tx failed\");\n\n        emit ExecuteTransaction(msg.sender, _txIndex);\n    }\n\n    function revokeConfirmation(uint _txIndex)\n        public\n        onlyOwner\n        txExists(_txIndex)\n        notExecuted(_txIndex)\n    {\n        Transaction storage transaction = transactions[_txIndex];\n\n        require(isConfirmed[_txIndex][msg.sender], \"tx not confirmed\");\n\n        transaction.numConfirmations -= 1;\n        isConfirmed[_txIndex][msg.sender] = false;\n\n        emit RevokeConfirmation(msg.sender, _txIndex);\n    }\n\n    function getOwners() public view returns (address[] memory) {\n        return owners;\n    }\n\n    function getTransactionCount() public view returns (uint) {\n        return transactions.length;\n    }\n\n    function getTransaction(uint _txIndex)\n        public\n        view\n        returns (\n            address to,\n            uint value,\n            bytes memory data,\n            bool executed,\n            uint numConfirmations\n        )\n    {\n        Transaction storage transaction = transactions[_txIndex];\n\n        return (\n            transaction.to,\n            transaction.value,\n            transaction.data,\n            transaction.executed,\n            transaction.numConfirmations\n        );\n    }\n}\n"}),
} as ContractStorage
