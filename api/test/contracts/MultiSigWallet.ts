
import { ABI } from "../../src/types";
import { ContractStorage } from "../utils";

export default {
  name: "MultiSigWallet",
  filename: "MultiSigWallet.sol",
  arguments: JSON.stringify([["0x82A258cb20E2ADB4788153cd5eb5839615EcE9a0","0x69535cB2F9Db4FC5f2867A27a1eD8e6612F787bA","0x9ADdFbFB23974488e51389A19A38946d102e83fE"],"1"]),
  bytecode: "0x60806040523480156200001157600080fd5b506040516200257e3803806200257e8339818101604052810190620000379190620003d9565b60008251116200007e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007590620004f1565b60405180910390fd5b60008111801562000090575081518111155b620000d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c99062000535565b60405180910390fd5b60005b8251811015620002f95760008382815181106200011b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000198576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018f9062000513565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161562000228576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200021f90620004cf565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508080620002f09062000634565b915050620000d5565b50806002819055505050620007ef565b6000620003206200031a8462000580565b62000557565b905080838252602082019050828560208602820111156200034057600080fd5b60005b858110156200037457816200035988826200037e565b84526020840193506020830192505060018101905062000343565b5050509392505050565b6000815190506200038f81620007bb565b92915050565b600082601f830112620003a757600080fd5b8151620003b984826020860162000309565b91505092915050565b600081519050620003d381620007d5565b92915050565b60008060408385031215620003ed57600080fd5b600083015167ffffffffffffffff8111156200040857600080fd5b620004168582860162000395565b92505060206200042985828601620003c2565b9150509250929050565b600062000442601083620005af565b91506200044f82620006f1565b602082019050919050565b600062000469600f83620005af565b915062000476826200071a565b602082019050919050565b600062000490600d83620005af565b91506200049d8262000743565b602082019050919050565b6000620004b7602883620005af565b9150620004c4826200076c565b604082019050919050565b60006020820190508181036000830152620004ea8162000433565b9050919050565b600060208201905081810360008301526200050c816200045a565b9050919050565b600060208201905081810360008301526200052e8162000481565b9050919050565b600060208201905081810360008301526200055081620004a8565b9050919050565b60006200056362000576565b9050620005718282620005fe565b919050565b6000604051905090565b600067ffffffffffffffff8211156200059e576200059d620006b1565b5b602082029050602081019050919050565b600082825260208201905092915050565b6000620005cd82620005d4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200060982620006e0565b810181811067ffffffffffffffff821117156200062b576200062a620006b1565b5b80604052505050565b60006200064182620005f4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000677576200067662000682565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f6f776e6572206e6f7420756e6971756500000000000000000000000000000000600082015250565b7f6f776e6572732072657175697265640000000000000000000000000000000000600082015250565b7f696e76616c6964206f776e657200000000000000000000000000000000000000600082015250565b7f696e76616c6964206e756d626572206f6620726571756972656420636f6e666960008201527f726d6174696f6e73000000000000000000000000000000000000000000000000602082015250565b620007c681620005c0565b8114620007d257600080fd5b50565b620007e081620005f4565b8114620007ec57600080fd5b50565b611d7f80620007ff6000396000f3fe6080604052600436106100ab5760003560e01c80639ace38c2116100645780639ace38c214610253578063a0e67e2b14610294578063c01a8c84146102bf578063c6427474146102e8578063d0549b8514610311578063ee22610b1461033c57610102565b8063025e7c271461010757806320ea8d86146101445780632e7700f01461016d5780632f54bf6e1461019857806333ea3dc8146101d557806380f59a651461021657610102565b36610102573373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1534476040516100f89291906118e2565b60405180910390a2005b600080fd5b34801561011357600080fd5b5061012e6004803603810190610129919061142a565b610365565b60405161013b9190611705565b60405180910390f35b34801561015057600080fd5b5061016b6004803603810190610166919061142a565b6103a4565b005b34801561017957600080fd5b506101826106ca565b60405161018f9190611897565b60405180910390f35b3480156101a457600080fd5b506101bf60048036038101906101ba919061139a565b6106d7565b6040516101cc919061179c565b60405180910390f35b3480156101e157600080fd5b506101fc60048036038101906101f7919061142a565b6106f7565b60405161020d959493929190611720565b60405180910390f35b34801561022257600080fd5b5061023d60048036038101906102389190611453565b610830565b60405161024a919061179c565b60405180910390f35b34801561025f57600080fd5b5061027a6004803603810190610275919061142a565b61085f565b60405161028b959493929190611720565b60405180910390f35b3480156102a057600080fd5b506102a961095a565b6040516102b6919061177a565b60405180910390f35b3480156102cb57600080fd5b506102e660048036038101906102e1919061142a565b6109e8565b005b3480156102f457600080fd5b5061030f600480360381019061030a91906113c3565b610d11565b005b34801561031d57600080fd5b50610326610f1b565b6040516103339190611897565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e919061142a565b610f21565b005b6000818154811061037557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610430576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042790611877565b60405180910390fd5b806004805490508110610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f906117d7565b60405180910390fd5b81600481815481106104b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906005020160030160009054906101000a900460ff1615610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990611817565b60405180910390fd5b60006004848154811061054e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906005020190506003600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f290611837565b60405180910390fd5b60018160040160008282546106109190611a3d565b9250508190555060006003600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550833373ffffffffffffffffffffffffffffffffffffffff167ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5560405160405180910390a350505050565b6000600480549050905090565b60016020528060005260406000206000915054906101000a900460ff1681565b600080606060008060006004878154811061073b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010154826002018360030160009054906101000a900460ff16846004015482805461079c90611afb565b80601f01602080910402602001604051908101604052809291908181526020018280546107c890611afb565b80156108155780601f106107ea57610100808354040283529160200191610815565b820191906000526020600020905b8154815290600101906020018083116107f857829003601f168201915b50505050509250955095509550955095505091939590929450565b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6004818154811061086f57600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020180546108be90611afb565b80601f01602080910402602001604051908101604052809291908181526020018280546108ea90611afb565b80156109375780601f1061090c57610100808354040283529160200191610937565b820191906000526020600020905b81548152906001019060200180831161091a57829003601f168201915b5050505050908060030160009054906101000a900460ff16908060040154905085565b606060008054806020026020016040519081016040528092919081815260200182805480156109de57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610994575b5050505050905090565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6b90611877565b60405180910390fd5b806004805490508110610abc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab3906117d7565b60405180910390fd5b8160048181548110610af7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906005020160030160009054906101000a900460ff1615610b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4d90611817565b60405180910390fd5b826003600082815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610bf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bec906117f7565b60405180910390fd5b600060048581548110610c31577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906005020190506001816004016000828254610c5691906119e7565b9250508190555060016003600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550843373ffffffffffffffffffffffffffffffffffffffff167f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004160405160405180910390a35050505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9490611877565b60405180910390fd5b6000600480549050905060046040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020016000151581526020016000815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610e80929190611265565b5060608201518160030160006101000a81548160ff0219169083151502179055506080820151816004015550508373ffffffffffffffffffffffffffffffffffffffff16813373ffffffffffffffffffffffffffffffffffffffff167fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d8686604051610f0d9291906118b2565b60405180910390a450505050565b60025481565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610fad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa490611877565b60405180910390fd5b806004805490508110610ff5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fec906117d7565b60405180910390fd5b8160048181548110611030577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906005020160030160009054906101000a900460ff161561108f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108690611817565b60405180910390fd5b6000600484815481106110cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060050201905060025481600401541015611124576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111b90611857565b60405180910390fd5b60018160030160006101000a81548160ff02191690831515021790555060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682600101548360020160405161119491906116ee565b60006040518083038185875af1925050503d80600081146111d1576040519150601f19603f3d011682016040523d82523d6000602084013e6111d6565b606091505b505090508061121a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611211906117b7565b60405180910390fd5b843373ffffffffffffffffffffffffffffffffffffffff167f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac60405160405180910390a35050505050565b82805461127190611afb565b90600052602060002090601f01602090048101928261129357600085556112da565b82601f106112ac57805160ff19168380011785556112da565b828001600101855582156112da579182015b828111156112d95782518255916020019190600101906112be565b5b5090506112e791906112eb565b5090565b5b808211156113045760008160009055506001016112ec565b5090565b600061131b61131684611930565b61190b565b90508281526020810184848401111561133357600080fd5b61133e848285611ab9565b509392505050565b60008135905061135581611d1b565b92915050565b600082601f83011261136c57600080fd5b813561137c848260208601611308565b91505092915050565b60008135905061139481611d32565b92915050565b6000602082840312156113ac57600080fd5b60006113ba84828501611346565b91505092915050565b6000806000606084860312156113d857600080fd5b60006113e686828701611346565b93505060206113f786828701611385565b925050604084013567ffffffffffffffff81111561141457600080fd5b6114208682870161135b565b9150509250925092565b60006020828403121561143c57600080fd5b600061144a84828501611385565b91505092915050565b6000806040838503121561146657600080fd5b600061147485828601611385565b925050602061148585828601611346565b9150509250929050565b600061149b83836114a7565b60208301905092915050565b6114b081611a71565b82525050565b6114bf81611a71565b82525050565b60006114d082611986565b6114da81856119a9565b93506114e583611961565b8060005b838110156115165781516114fd888261148f565b97506115088361199c565b9250506001810190506114e9565b5085935050505092915050565b61152c81611a83565b82525050565b600061153d82611991565b61154781856119ba565b9350611557818560208601611ac8565b61156081611beb565b840191505092915050565b6000815461157881611afb565b61158281866119cb565b9450600182166000811461159d57600181146115ae576115e1565b60ff198316865281860193506115e1565b6115b785611971565b60005b838110156115d9578154818901526001820191506020810190506115ba565b838801955050505b50505092915050565b60006115f76009836119d6565b915061160282611bfc565b602082019050919050565b600061161a6011836119d6565b915061162582611c25565b602082019050919050565b600061163d6014836119d6565b915061164882611c4e565b602082019050919050565b60006116606013836119d6565b915061166b82611c77565b602082019050919050565b60006116836010836119d6565b915061168e82611ca0565b602082019050919050565b60006116a66011836119d6565b91506116b182611cc9565b602082019050919050565b60006116c96009836119d6565b91506116d482611cf2565b602082019050919050565b6116e881611aaf565b82525050565b60006116fa828461156b565b915081905092915050565b600060208201905061171a60008301846114b6565b92915050565b600060a08201905061173560008301886114b6565b61174260208301876116df565b81810360408301526117548186611532565b90506117636060830185611523565b61177060808301846116df565b9695505050505050565b6000602082019050818103600083015261179481846114c5565b905092915050565b60006020820190506117b16000830184611523565b92915050565b600060208201905081810360008301526117d0816115ea565b9050919050565b600060208201905081810360008301526117f08161160d565b9050919050565b6000602082019050818103600083015261181081611630565b9050919050565b6000602082019050818103600083015261183081611653565b9050919050565b6000602082019050818103600083015261185081611676565b9050919050565b6000602082019050818103600083015261187081611699565b9050919050565b60006020820190508181036000830152611890816116bc565b9050919050565b60006020820190506118ac60008301846116df565b92915050565b60006040820190506118c760008301856116df565b81810360208301526118d98184611532565b90509392505050565b60006040820190506118f760008301856116df565b61190460208301846116df565b9392505050565b6000611915611926565b90506119218282611b2d565b919050565b6000604051905090565b600067ffffffffffffffff82111561194b5761194a611bbc565b5b61195482611beb565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006119f282611aaf565b91506119fd83611aaf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a3257611a31611b5e565b5b828201905092915050565b6000611a4882611aaf565b9150611a5383611aaf565b925082821015611a6657611a65611b5e565b5b828203905092915050565b6000611a7c82611a8f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611ae6578082015181840152602081019050611acb565b83811115611af5576000848401525b50505050565b60006002820490506001821680611b1357607f821691505b60208210811415611b2757611b26611b8d565b5b50919050565b611b3682611beb565b810181811067ffffffffffffffff82111715611b5557611b54611bbc565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f7478206661696c65640000000000000000000000000000000000000000000000600082015250565b7f747820646f6573206e6f74206578697374000000000000000000000000000000600082015250565b7f747820616c726561647920636f6e6669726d6564000000000000000000000000600082015250565b7f747820616c726561647920657865637574656400000000000000000000000000600082015250565b7f7478206e6f7420636f6e6669726d656400000000000000000000000000000000600082015250565b7f63616e6e6f742065786563757465207478000000000000000000000000000000600082015250565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b611d2481611a71565b8114611d2f57600080fd5b50565b611d3b81611aaf565b8114611d4657600080fd5b5056fea264697066735822122062ae9dd17723d75c1292a11f44dbf697013a16aa551a3398e583d25594b1d17b64736f6c6343000804003300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000300000000000000000000000082a258cb20e2adb4788153cd5eb5839615ece9a000000000000000000000000069535cb2f9db4fc5f2867a27a1ed8e6612f787ba0000000000000000000000009addfbfb23974488e51389a19a38946d102e83fe",
  abi: [{"inputs":[{"internalType":"address[]","name":"_owners","type":"address[]"},{"internalType":"uint256","name":"_numConfirmationsRequired","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"ConfirmTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"balance","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"ExecuteTransaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"}],"name":"RevokeConfirmation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"txIndex","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"SubmitTransaction","type":"event"},{"inputs":[{"internalType":"uint256","name":"_txIndex","type":"uint256"}],"name":"confirmTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_txIndex","type":"uint256"}],"name":"executeTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getOwners","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_txIndex","type":"uint256"}],"name":"getTransaction","outputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"executed","type":"bool"},{"internalType":"uint256","name":"numConfirmations","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTransactionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"isConfirmed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numConfirmationsRequired","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"owners","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_txIndex","type":"uint256"}],"name":"revokeConfirmation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"submitTransaction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"transactions","outputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"executed","type":"bool"},{"internalType":"uint256","name":"numConfirmations","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}] as ABI,
  sources: JSON.stringify({"MultiSigWallet.sol":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\ncontract MultiSigWallet {\n    event Deposit(address indexed sender, uint amount, uint balance);\n    event SubmitTransaction(\n        address indexed owner,\n        uint indexed txIndex,\n        address indexed to,\n        uint value,\n        bytes data\n    );\n    event ConfirmTransaction(address indexed owner, uint indexed txIndex);\n    event RevokeConfirmation(address indexed owner, uint indexed txIndex);\n    event ExecuteTransaction(address indexed owner, uint indexed txIndex);\n\n    address[] public owners;\n    mapping(address => bool) public isOwner;\n    uint public numConfirmationsRequired;\n\n    struct Transaction {\n        address to;\n        uint value;\n        bytes data;\n        bool executed;\n        uint numConfirmations;\n    }\n\n    // mapping from tx index => owner => bool\n    mapping(uint => mapping(address => bool)) public isConfirmed;\n\n    Transaction[] public transactions;\n\n    modifier onlyOwner() {\n        require(isOwner[msg.sender], \"not owner\");\n        _;\n    }\n\n    modifier txExists(uint _txIndex) {\n        require(_txIndex < transactions.length, \"tx does not exist\");\n        _;\n    }\n\n    modifier notExecuted(uint _txIndex) {\n        require(!transactions[_txIndex].executed, \"tx already executed\");\n        _;\n    }\n\n    modifier notConfirmed(uint _txIndex) {\n        require(!isConfirmed[_txIndex][msg.sender], \"tx already confirmed\");\n        _;\n    }\n\n    constructor(address[] memory _owners, uint _numConfirmationsRequired) {\n        require(_owners.length > 0, \"owners required\");\n        require(\n            _numConfirmationsRequired > 0 &&\n                _numConfirmationsRequired <= _owners.length,\n            \"invalid number of required confirmations\"\n        );\n\n        for (uint i = 0; i < _owners.length; i++) {\n            address owner = _owners[i];\n\n            require(owner != address(0), \"invalid owner\");\n            require(!isOwner[owner], \"owner not unique\");\n\n            isOwner[owner] = true;\n            owners.push(owner);\n        }\n\n        numConfirmationsRequired = _numConfirmationsRequired;\n    }\n\n    receive() external payable {\n        emit Deposit(msg.sender, msg.value, address(this).balance);\n    }\n\n    function submitTransaction(\n        address _to,\n        uint _value,\n        bytes memory _data\n    ) public onlyOwner {\n        uint txIndex = transactions.length;\n\n        transactions.push(\n            Transaction({\n                to: _to,\n                value: _value,\n                data: _data,\n                executed: false,\n                numConfirmations: 0\n            })\n        );\n\n        emit SubmitTransaction(msg.sender, txIndex, _to, _value, _data);\n    }\n\n    function confirmTransaction(uint _txIndex)\n        public\n        onlyOwner\n        txExists(_txIndex)\n        notExecuted(_txIndex)\n        notConfirmed(_txIndex)\n    {\n        Transaction storage transaction = transactions[_txIndex];\n        transaction.numConfirmations += 1;\n        isConfirmed[_txIndex][msg.sender] = true;\n\n        emit ConfirmTransaction(msg.sender, _txIndex);\n    }\n\n    function executeTransaction(uint _txIndex)\n        public\n        onlyOwner\n        txExists(_txIndex)\n        notExecuted(_txIndex)\n    {\n        Transaction storage transaction = transactions[_txIndex];\n\n        require(\n            transaction.numConfirmations >= numConfirmationsRequired,\n            \"cannot execute tx\"\n        );\n\n        transaction.executed = true;\n\n        (bool success, ) = transaction.to.call{value: transaction.value}(\n            transaction.data\n        );\n        require(success, \"tx failed\");\n\n        emit ExecuteTransaction(msg.sender, _txIndex);\n    }\n\n    function revokeConfirmation(uint _txIndex)\n        public\n        onlyOwner\n        txExists(_txIndex)\n        notExecuted(_txIndex)\n    {\n        Transaction storage transaction = transactions[_txIndex];\n\n        require(isConfirmed[_txIndex][msg.sender], \"tx not confirmed\");\n\n        transaction.numConfirmations -= 1;\n        isConfirmed[_txIndex][msg.sender] = false;\n\n        emit RevokeConfirmation(msg.sender, _txIndex);\n    }\n\n    function getOwners() public view returns (address[] memory) {\n        return owners;\n    }\n\n    function getTransactionCount() public view returns (uint) {\n        return transactions.length;\n    }\n\n    function getTransaction(uint _txIndex)\n        public\n        view\n        returns (\n            address to,\n            uint value,\n            bytes memory data,\n            bool executed,\n            uint numConfirmations\n        )\n    {\n        Transaction storage transaction = transactions[_txIndex];\n\n        return (\n            transaction.to,\n            transaction.value,\n            transaction.data,\n            transaction.executed,\n            transaction.numConfirmations\n        );\n    }\n}\n"}),
} as ContractStorage
