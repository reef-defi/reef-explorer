version: '3.7'

services:
  substrate-node:
    image: reef-node-testnet/latest
    hostname: substrate-node
    build: ./node/testnet
    volumes:
      - 'substrate-data:/data'
    ports:
      - '30333:30333'
      - '9933:9933'
      - '9944:9944'
    expose:
      - '9944'
    command: -d /data --ws-max-connections 1000 --chain testnet --pruning=archive --rpc-cors "*" --ws-port 9944 --port 30333 --unsafe-ws-external --no-prometheus --name 'Reef explorer' --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0'
    restart: always
    networks:
      - reefscan

  postgres:
    image: postgres:13
    restart: always
    shm_size: 1gb
    volumes:
      - 'db-data:/var/lib/postgresql/data'
      - './db/sql/initialization/init.sql:/docker-entrypoint-initdb.d/00_init.sql'
      - './db/sql/initialization/block.sql:/docker-entrypoint-initdb.d/01_block.sql'
      - './db/sql/initialization/account.sql:/docker-entrypoint-initdb.d/02_account.sql'
      - './db/sql/initialization/extrinsic.sql:/docker-entrypoint-initdb.d/03_extrinsic.sql'
      - './db/sql/initialization/event.sql:/docker-entrypoint-initdb.d/04_event.sql'
      - './db/sql/initialization/error.sql:/docker-entrypoint-initdb.d/05_error.sql'
      - './db/sql/initialization/contract.sql:/docker-entrypoint-initdb.d/06_contract.sql'
      - './db/sql/initialization/evmEvent.sql:/docker-entrypoint-initdb.d/07_evmEvent.sql'
      - './db/sql/initialization/transfer.sql:/docker-entrypoint-initdb.d/08_transfer.sql'
    environment:
      POSTGRES_USER: 'reefexplorer'
      POSTGRES_PASSWORD: 'reefexplorer'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U reefexplorer']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - reefscan

  graphql-engine:
    image: hasura/graphql-engine:v1.3.3.cli-migrations-v2
    ports:
      - '8082:8080'
    volumes:
      - './db/hasura/metadata:/hasura-metadata'
    depends_on:
      - 'postgres'
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://reefexplorer:reefexplorer@postgres:5432/reefexplorer
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true' # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: public
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
    networks:
      - reefscan

  crawler:
    image: crawler
    build: 
      context: ./crawler
      dockerfile: ./Dockerfile
    restart: always
    environment:
      - NODE_PROVIDER_URLS=["ws://substrate-node:9944"]
      - START_BLOCK_STEP=32
      # with 8 nodes you can process up to 4096 blocks at once but rather keep it at 1024 if server doesn't have a lot of RAM.
      # Currently we support node with 16Gb of RAM. To change the capacity go in `./crawler/package.json` and change --max-old-space-size=16384 to desired size
      - MAX_BLOCKS_PER_STEP=1024
      - POSTGRES_PORT=5432
      - POSTGRES_HOST='postgres'
      - POSTGRES_USER='reefexplorer'
      - POSTGRES_DATABASE='reefexplorer'
      - POSTGRES_PASSWORD='reefexplorer'
    depends_on:
      - 'postgres'
      - 'substrate-node'
    networks:
      - reefscan

  api:
    image: api
    build:
      context: ./api
      dockerfile: ./Dockerfile
    restart: always
    environment:
      - PORT=8000
      - NODE_URL='ws://substrate-node:9944'
      - POSTGRES_PORT=5432
      - POSTGRES_HOST='postgres'
      - POSTGRES_USER='reefexplorer'
      - POSTGRES_DATABASE='reefexplorer'
      - POSTGRES_PASSWORD='reefexplorer'
      - RECAPTCHA_SECRET=6LfNcPIaAAAAADSldnLXXxSrXIYH532l0cSsfDEU
    depends_on:
      - 'postgres'
      - 'substrate-node'
    networks:
      - reefscan

# Persistent volumes
volumes:
  sql:
  db-data: {}
  substrate-data: {}

networks:
  reefscan:
    name: reefscan
